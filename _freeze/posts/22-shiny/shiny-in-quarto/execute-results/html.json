{
  "hash": "2edd999ba4a067a34083b067f2f8039a",
  "result": {
    "markdown": "---\ntitle: \"Shiny in Quarto\"\nformat: \n  html:\n    highlight-style: a11y-dark\nserver: shiny\nexecute:\n  echo: true\n---\n\n\n## Input widget\n\n\n::: {.cell}\n\n```{.r .cell-code}\nradioButtons(\n  inputId = \"radio_input\",\n  label = \"Are you a cat person or a dog person?\",\n  choices = c(\n    \"Cat person\",\n    \"Dog person\",\n    \"Don't make me choose, I'm both!\",\n    \"Neither!\"\n  ),\n  selected = \"Don't make me choose, I'm both!\"\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"radio_input\" class=\"form-group shiny-input-radiogroup shiny-input-container\" role=\"radiogroup\" aria-labelledby=\"radio_input-label\">\n<label class=\"control-label\" id=\"radio_input-label\" for=\"radio_input\">Are you a cat person or a dog person?</label>\n<div class=\"shiny-options-group\">\n<div class=\"radio\">\n<label>\n<input type=\"radio\" name=\"radio_input\" value=\"Cat person\"/>\n<span>Cat person</span>\n</label>\n</div>\n<div class=\"radio\">\n<label>\n<input type=\"radio\" name=\"radio_input\" value=\"Dog person\"/>\n<span>Dog person</span>\n</label>\n</div>\n<div class=\"radio\">\n<label>\n<input type=\"radio\" name=\"radio_input\" value=\"Don&#39;t make me choose, I&#39;m both!\" checked=\"checked\"/>\n<span>Don't make me choose, I'm both!</span>\n</label>\n</div>\n<div class=\"radio\">\n<label>\n<input type=\"radio\" name=\"radio_input\" value=\"Neither!\"/>\n<span>Neither!</span>\n</label>\n</div>\n</div>\n</div>\n```\n:::\n:::\n\n\n## Widget value\n\n\n::: {.cell context='server'}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nverbatimTextOutput(\"radio_output\")\n```\n\n::: {.cell-output-display}\n`<pre class=\"shiny-text-output noplaceholder\" id=\"radio_output\"></pre>`{=html}\n:::\n:::\n\npreserve5dc8d0cce549ba92\npreserve5e81180f420966af\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"base\",\"cli\",\"compiler\",\"datasets\",\"digest\",\"ellipsis\",\"evaluate\",\"fastmap\",\"graphics\",\"grDevices\",\"htmltools\",\"httpuv\",\"jsonlite\",\"knitr\",\"later\",\"lifecycle\",\"magrittr\",\"methods\",\"mime\",\"promises\",\"R6\",\"Rcpp\",\"renv\",\"rlang\",\"rmarkdown\",\"rstudioapi\",\"shiny\",\"stats\",\"stringi\",\"stringr\",\"tools\",\"utils\",\"xfun\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.2.1\",\"3.3.0\",\"4.2.1\",\"4.2.1\",\"0.6.29\",\"0.3.2\",\"0.15\",\"1.1.0\",\"4.2.1\",\"4.2.1\",\"0.5.2\",\"1.6.5\",\"1.8.0\",\"1.39\",\"1.3.0\",\"1.0.1\",\"2.0.3\",\"4.2.1\",\"0.12\",\"1.2.0.1\",\"2.5.1\",\"1.0.8.3\",\"0.15.5\",\"1.0.3\",\"2.14\",\"0.13\",\"1.7.1\",\"4.2.1\",\"1.7.6\",\"1.4.0\",\"4.2.1\",\"4.2.1\",\"0.31\",\"1.8-4\",\"2.3.5\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {
      "preserve5dc8d0cce549ba92": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\noutput$radio_output = renderPrint({\n  input$radio_input\n})\n</script>\n",
      "preserve5e81180f420966af": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n"
    },
    "postProcess": true
  }
}