{
  "hash": "f5a2abda04530fc72ca7a305dd731d81",
  "result": {
    "markdown": "---\ntitle: \"Code tools\"\ndate: \"2022-07-13\"\ncategories: [html, code]\nimage: \"featured.png\"\nimage-alt: \"Three ways of linking to source code from within your document, each presented with its associated YAML. (1) Make source code available on page. (2) Link to source code on repo. (3) Link to any file as source code. The associated YAML fields are provided in the blog post.\"\nformat:\n  html: \n    code-tools:\n      source: https://github.com/mine-cetinkaya-rundel/quarto-tip-a-day/blob/main/posts/16-code-tools/penguins.R\n---\n\n\n## `code-tools`\n\nYou can include a **Code** menu in the header of your document that provides various tools for readers to interact with your source code.\n\nIf you want to include the full source code (including executable code chunks and your prose, in other words, your full `.qmd` file), set `code-tools: true` in the YAML of your document.\n\n``` yaml\n---\nformat:\n  html: \n    code-tools: true\n---\n```\n\nThe [mlr3book](https://mlr3book.mlr-org.com/) uses this approach.\n\nAlternatively, if your document lives within a project that has a specified `repo-url` in the project-level `_quarto.yml` file, you can directly link to the document in your repo by specifying the `source`.\n\n``` yaml\n---\nformat:\n  html: \n    code-tools:\n      source: repo\n---\n```\n\nOn this page I've done something a little different. I have some \"analysis code\" on my page, in the following code chunks.\n\nFirst, I load some packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n:::\n\n\nThen, I calculate some summary statistics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  group_by(species) %>%\n  summarise(mean_bill_length = mean(bill_length_mm, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 2\n  species   mean_bill_length\n  <fct>                <dbl>\n1 Adelie                38.8\n2 Chinstrap             48.8\n3 Gentoo                47.5\n```\n:::\n:::\n\n\nWhen you have a bunch of code as well as bunch of prose in your document (like here), your readers might want access to just the content in your executable code chunks so that they can easily replicate your analysis. You can do this by maintaining a separate R script, and then linking to it from your YAML, like I've done on this page.\n\n``` yaml\n---\nformat:\n  html: \n    code-tools:\n      source: https://github.com/mine-cetinkaya-rundel/quarto-tip-a-day/blob/main/posts/16-code-tools/penguins.R\n---\n```\n\nAnd you have two options for generating that R script:\n\n- You can create and maintain it manually, making sure to keep it updated as you update the analysis in your narrative / `.qmd` file.\n- You can automatically generate it from your `.qmd` file with `knitr::purl()`, which \"extracts the R code in it according to a list of patterns, evaluates the code and writes the output in another file\".\n\n## Learn more\n\n[Code tools](https://quarto.org/docs/output-formats/html-code.html#code-tools)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}